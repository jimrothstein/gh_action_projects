name: 300_GITHUB_OUTPUT Example

on:
  workflow_dispatch:

jobs:
  demonstrate-output:
    runs-on: ubuntu-latest
    steps:
      - name: Step 1: Generate a dynamic filename
        id: generate_file # Assign an ID to this step to reference its outputs later
        run: |
          # Simulate generating a filename (e.g., based on date/time)
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          DYNAMIC_FILENAME="report_${TIMESTAMP}.txt"

          echo "Generated filename: $DYNAMIC_FILENAME"

          # --- THIS IS WHERE $GITHUB_OUTPUT IS USED ---
          # We write a key-value pair to the $GITHUB_OUTPUT file.
          # The key is 'filename', and the value is the content of $DYNAMIC_FILENAME.
          echo "filename=$DYNAMIC_FILENAME" >> "$GITHUB_OUTPUT"

      - name: Step 2: Use the generated filename
        # Access the output from 'generate_file' step using its ID and output name
        run: |
          # Accessing the output: steps.<step_id>.outputs.<output_name>
          RECEIVED_FILENAME="${{ steps.generate_file.outputs.filename }}"

          echo "Step 2 received filename: $RECEIVED_FILENAME"

          # Simulate using the filename, e.g., creating the file
          echo "This is content for $RECEIVED_FILENAME" > "$RECEIVED_FILENAME"
          echo "Created file: $(ls -l $RECEIVED_FILENAME)"

      - name: Step 3: Another step using the filename
        # You can use the output in multiple subsequent steps
        run: |
          ANOTHER_FILENAME="${{ steps.generate_file.outputs.filename }}"
          echo "Step 3 also received filename: $ANOTHER_FILENAME"
          cat "$ANOTHER_FILENAME" # Display content